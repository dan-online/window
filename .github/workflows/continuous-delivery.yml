name: Continuous Delivery

on:
  push:
    branches:
      - main

jobs:
  docker:
    name: Docker / Build and Push
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Project
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
    
      - name: Stable with rustfmt and clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy

      - name: Cargo Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: sudo apt update -y && sudo apt install -y clang libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev libavutil-dev libpostproc-dev libswresample-dev libswscale-dev

      - name: Build
        run: cargo build --release

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: danonline/window:latest
  
  binary:
    name: Release
    strategy:
      fail-fast: false # don't fail other jobs if one fails
      matrix:
        settings:
          - os: ubuntu-24.04
            rust: stable
            target: x86_64-unknown-linux-musl
            cross: true
          - os: windows-2019
            rust: stable
            target: x86_64-pc-windows-msvc
            cross: false
        # build: [x86_64-linux, aarch64-linux, x86_64-macos, x86_64-windows] #, x86_64-win-gnu, win32-msvc
        # include:
        # - build: x86_64-linux
        #   os: ubuntu-24.04
        #   rust: stable
        #   target: x86_64-unknown-linux-musl
        #   cross: false
        # # - build: aarch64-linux
        # #   os: ubuntu-24.04
        # #   rust: stable
        # #   target: aarch64-unknown-linux-musl
        # #   cross: true
        # # - build: x86_64-macos
        # #   os: macos-latest
        # #   rust: stable
        # #   target: x86_64-apple-darwin
        # #   cross: false
        # - build: x86_64-windows
        #   os: windows-2019
        #   rust: stable
        #   target: x86_64-pc-windows-msvc
        #   cross: false
    runs-on: ${{ matrix.settings.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install ${{ matrix.settings.rust }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.settings.rust }}
          target: ${{ matrix.settings.target }}
          override: true

      - name: Cargo Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # - name: Setup VCPKG
      #   uses: lukka/run-vcpkg@v11

      # - name: Build release binary
      #   uses: actions-rs/cargo@v1
      #   with:
      #     use-cross: ${{ matrix.settings.cross }}
      #     command: build
      #     args: --release --locked --target ${{ matrix.settings.target }}
      #   env:
      #     RUSTFLAGS: "-C target-feature=+crt-static"
      - name: Build static
        if: matrix.settings.target == 'x86_64-unknown-linux-musl'
        uses:  stevenleadbeater/rust-musl-builder@master
        with:
            args: /bin/bash -c "cargo build --release --target=x86_64-unknown-linux-musl"